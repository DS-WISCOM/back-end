paths:
  /api/project/total:
    get:
      summary: 전체 프로젝트 조회
      description: 프로젝트의 모든 정보를 가져옵니다.
      tags: [Project]
      parameters:
        - name: page
          description: "1~8 (1: default) / Up to 8 pages per page."
          in: query
          schema:
            type: Number
        - name: sort
          description: "1: 이름순, 2: 인기순 (1: default)"
          in: query
          schema:
            type: Number
      responses:
        "200":
          description: 프로젝트 조회 성공
  /api/insert/image:
    post:
      summary: 이미지 추가
      description: s3에 이미지를 저장합니다.
      tags: [Project]

      responses:
        "200":
          description: 이미지 업로드 성공

  /api/project/{projectId}:
    get:
      summary: 프로젝트 세부 사항 조회
      description: params로 project의 Id를 가져오고 그 Id에 해당하는 comment와 세부 사항들을 보여줍니다.
      tags: [Project]
      parameters:
        - name: projectId
          description: "세부사항을 보여주고 싶은 프로젝트의 Id"
          in: path
          schema:
            type: array
        - name: page
          description: "1~3 (1: default) / Up to 3 pages per page."
          in: query
          schema:
            type: Number
      responses:
        "200":
          description: 프로젝트 세부사항 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/project/{projectId}/addLike:
    post:
      summary: 좋아요 추가
      description: params로 project의 ID를 가져와서 그 프로젝트의 좋아요를 추가합니다.
      tags: [Project]
      parameters:
        - name: projectId
          description: 프로젝트의 id
          in: path
          schema:
            type: String
          examples:
            Sample:
              value: "632aeb2752930aa3ed38a101"
              summary: "example project Id"
      responses:
        "200":
          description: 좋아요 추가 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean

  /api/project/{projectId}/addComment:
    post:
      summary: 댓글 추가
      description: params로 project의 ID를 가져와서 그 프로젝트의 댓글을 추가합니다.
      tags: [Project]
      parameters:
        - name: projectId
          description: "세부사항을 보여주고 싶은 프로젝트의 Id"
          in: path
          schema:
            type: array
        - name: comment
          in: body
          description: comment의 writer와 content 작성
          schema:
            type: array
      responses:
        "200":
          description: 댓글 추가 성공
          content:
            application/json:
              schema:
                type: array
                properties:
                  success:
                    type: boolean
